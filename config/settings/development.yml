#allowed amqp accrual clients
amqp_accrual:
  idb:
    #set to false to turn off this accrual client
    active: true
    #set to true to allow deletion messages to work
    allow_delete: false
    #queue for processing accruals
    delayed_job_queue: idb
    #amqp queues for exchanging messages about accruals with this client
    incoming_queue: idb_to_medusa
    outgoing_queue: medusa_to_idb
    #file group that will take content from this accrual client
    file_group_id: 1401
    #where content from this client is staged
    staging_directory: <%= Rails.root %>/tmp/idb-staging/development
    #whether or not to return some extra information in amqp messages - this may be restructured to allow clients to be
    #configured to get exactly the information they want
    return_directory_information: true
book_tracker:
  import_path: ~/Projects/mbt_marcxml
  library_nuc_code: UIU
#settings for communication with downloader
downloader:
  #downloader root - configured on the other side as well
  root: medusa
  #queues to use
  incoming_queue: downloader_to_medusa_dev
  outgoing_queue: client_to_downloader_dev
  #Bunny style amqp connection options - note that these are distinct from the main amqp options because the downloader
  #may be on a different vhost/etc.
  amqp:
fits:
  #default size to do
  batch_size: 1000
  #In certain cases it may be advantageous to call a fits binary directly, but this is optional
  binary: /path/to/fits/binary
  #url for fits server
  server_url: http://localhost:4567
  #location to store generated fits
  storage: /Users/hding2/repos/medusa-collection-registry/tmp/storage-dev/fits
handle_client:
  #medusa_host is used by the models to help generate the appropriate URLs to
  #pass to the handle server
  medusa_host: medusa.library.illinois.edu
  #these are the connection parameters to the handle server itself
  handle_server:
    host: media.library.uiuc.edu
    port: 8080
    user_name: handle_user
    password: handle_user_password
#connection to the iiif image server
iiif:
  host: localhost
  port: 3000
  #this is the path from the loris server's base path, e.g. /usr/local/share/images for the docker version, to
  #the cfs root for this environment
  root: dev
ldap:
  host: ad.uillinois.edu
  port: 389
  protocol: tls
  user: your_ldap_user
  passwd: your_password
  base: DC=ad,DC=uillinois,DC=edu
  search: ^CN=([^,]+),((CN|OU)=[^,]+,)*DC=ad,DC=uillinois,DC=edu$
#general medusa configuration
medusa:
  #medusa server information for generating certain urls that need more than just the path
  server: http://localhost:3000
  #'cfs' staging file config. Note that this doesn't strictly need to be a dx/cfs file system,
  #but we use that name in order to distinguish from our internal bit file stuff for now.
  cfs:
    root: /home/hading/repos/medusa-collection-registry/tmp/cfs-root-dev
    tmp: /Users/hding2/repos/medusa-collection-registry/tmp
    export_root: /home/hading/repos/medusa-collection-registry/tmp/cfs-export-root-dev
    export_autoclean: false
  #This opens a few actions to basic auth so that machine clients can use them
  basic_auth: machine_user:machine_password
  #AD groups used to allow use and full administration of medusa
  medusa_users_group: Library Medusa Users
  medusa_admins_group: Library Medusa Admins
  #Configuration for the amazon backup
  amazon:
    #AMQP queues to communicate with glacier server
    outgoing_queue: medusa_to_glacier
    incoming_queue: glacier_to_medusa
  #approximate number of days to elapse between fixity checks
  fixity_interval: 90
  fixity_server:
    #AMQP queues to communicate with fixity server
    outgoing_queue: medusa_to_fixity
    incoming_queue: fixity_to_medusa
  #You can set anything here that you might pass to Bunny.new. Anything you don't set just gets the Bunny default.
  #Typical fields needed for our setup are shown below.
  amqp:
    #ssl: true
    #port: 5761 #this is the default port for ssl connections
    #host: 127.0.0.1
    #user: user
    #password: pw
    #vhost: medusa
    #verify_peer: false
  #controls whether public view buttons show up and whether controllers allow access to public views
  public_view_on: true
  #where certain types of email should go. It should work for these to be single emails or arrays, though
  #a single email to a list is preferable for mass distribution. noreply is the address used for from when
  #appropriate
  email:
    admin: hding2@illinois.edu
    feedback: hding2@illinois.edu
    dev: hding2@illinois.edu
    noreply: medusa-noreply@medusatest.library.illinois.edu
#where project content for automatic ingest is staged
project_staging_directory: /project/staging/directory
#configuration for Omniauth::Shibboleth
shibboleth:
  host: medusatest.library.illinois.edu
  uid_field: eppn
  extra_fields:
    - eppn
    - givenName
    - mail
    - org_dn
    - sn
    - telephoneNumber
    - uid
    - entitlement
    - unscoped_affiliation
  request_type: header
  info_fields:
    email: mail
smtp:
  #These are settings as expected for ActionMailer::Base.smtp_settings
  smtp_settings:
    address: express-smtp.cites.uiuc.edu
  #used by mailer to construct urls
  web_host: "localhost:3000"
storage:
  #For each root the name gives a tag to be shown to start in the browser when accruing
  #The local path is the local path to the directory in the condo mount
  #the remote path is the path to a local mount of a storage.library (or other) directory which
  #we expect has been synced to the local path - but having this lets us check the sync.
  #Note that if there is no sync (probably for development and/or test) you can just the local and remote
  #paths to be the same. The sync check will still happen, but will be trivial.
  #Some of this may go away if we go to ADS
  accrual:
    roots:
      - local_path: /Users/hding2/repos/medusa-collection-registry/tmp/staging-roots/dev-1
        remote_path: /Users/hding2/repos/medusa-collection-registry/tmp/staging-roots/dev-1
        name: staging-1
  staging:
    #an array of hashes which have the local_path (i.e. as the medusa server sees it) and the remote_path
    #what will be recorded in the external file path). The name is used in the accrual processes.
    roots:
      - local_path: /Users/hding2/repos/medusa-collection-registry/tmp/staging-root-1
        remote_path: /staging-root-1
        name: staging-1
      - local_path: /Users/hding2/repos/medusa-collection-registry/tmp/staging-root-2
        remote_path: /staging-root-2
        name: staging-2
superusers:
  - superadmin@example.com
#settings for triple store integration
triple_store:
  triple_store_base_url: http://localhost:3030/test
  medusa_base_url: http://localhost:3000
  medusa_rdf_prefix: https://medusa.library.illinois.edu/terms/