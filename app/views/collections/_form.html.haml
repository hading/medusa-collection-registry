= simple_form_for @collection, html: { class: 'form-horizontal' }, wrapper: :horizontal_form do |f|
  .row
    = render partial: 'shared/form_sidebar', locals: {f: f, object: @collection, cancel_return: (@collection.repository if @collection.new_record?)}
    .col-sm-9
      .tabbable
        = render partial: 'shared/tab_header', locals: {id: 'edit-tabs', tabs: collection_form_tab_list}
        .tab-content
          #descriptive-metadata.tab-pane.active
            = render 'public_notice'
            = f.input :publish, wrapper: :horizontal_radio_and_checkboxes, label: 'Open collection metadata to public list of collections'
            = f.input :title
            - if @collection.repository
              = f.association :repository, collection: @repositories, include_blank: false, selected: @collection.repository.id
            - else
              = f.association :repository, collection: @repositories, required: true
            = f.input :description
            = f.input :access_url, as: :string, label: 'Access link (to digital content in another system)'
            = f.input :physical_collection_url, as: :string, label: 'Physical collection URL'
            = f.input :external_id, label: 'External ID'
            = f.input :representative_image
            = f.input :representative_item
            = f.association :resource_types, as: :check_boxes, wrapper_html: {id: 'resource_types'}, wrapper: :horizontal_radio_and_checkboxes
            = f.association :access_systems, collection: access_system_select_collection, html: {multiple: true}, as: :check_boxes, wrapper: :horizontal_radio_and_checkboxes
          #administrative-metadata.tab-pane
            = f.input :private_description
            = f.input :contact_email, label: 'Contact Person Email', type: :email
            = f.association :preservation_priority, include_blank: false, selected: (@collection.preservation_priority.id rescue PreservationPriority.default.id)
            = f.input :notes
          #rights-metadata.tab-pane
            = render partial: 'rights_declarations/nested_form', locals: {containing_form: f, rights_declaration: @collection.rights_declaration}
          #subcollections.tab-pane
            - if @collection.repository
              = f.association :child_collections, as: :check_boxes, collection: @collection.peer_collections, label: false
            - else
              No subcollections are available until this collection is saved with a repository.