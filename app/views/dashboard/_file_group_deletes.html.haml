- headers = ['File Group (id)', 'Collection (id) [ext id]', 'Requester', 'State', 'Actions']
= render layout: 'layouts/standard_table', locals: {id: :file_group_deletes, classes: %w(table-bordered table-condensed), headers: headers} do
  - @workflows.each do |workflow|
    %tr
      %td #{link_to(workflow.cached_file_group_title, file_group_path(workflow.file_group_id))} (#{workflow.file_group_id})
      - if workflow.collection
        %td
          #{link_to(workflow.collection.title, collection_path(workflow.collection))} (#{workflow.cached_collection_id})
          - if workflow.collection&.external_id.present?
            [#{workflow.collection.external_id}]
      - else
        %td
          Owning collection not found: (#{workflow.cached_collection_id})
      %td= workflow.requester.email
      %td= workflow.state
      %td
        - if workflow.state == 'wait_decision'
          = small_default_button('Decide', admin_decide_workflow_file_group_delete_path(workflow))
        - elsif workflow.state == 'wait_delete_content'
          = small_default_button('Restore', restore_content_workflow_file_group_delete_path(workflow), method: :post)
:javascript
  initialize_data_table("table#file_group_deletes", {});
