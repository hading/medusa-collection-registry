= f.input :collection_id, as: :hidden, input_html: {value: @collection.id}
= f.input :name, required: true
= f.input :external_id, label: 'External ID'
- if @file_group.new_record?
  = f.input :storage_level, as: :select, include_blank: false, collection: FileGroup.storage_levels, required: true
- else
  = f.input :storage_level, disabled: true
= f.input :producer_id, collection: producers_select_collection, required: :true, include_blank: false
%hr
= f.input :external_file_location
= f.input :staged_file_location
= f.input :package_profile_id, as: :select, include_blank: true, collection: package_profile_select_collection
= f.input :file_type_id, collection: file_types_select_collection
- if @file_group.new_record? or @file_group.supports_cfs
  = f.input :cfs_directory_id, as: :select, include_blank: true, collection: cfs_file_group_root_select_collection(@file_group), label: 'Cfs root'
= f.input :file_format
= f.input :total_file_size, label: 'Total file size (GB)', disabled: @file_group.is_a?(BitLevelFileGroup), input_html: {value: @file_group.file_size}
= f.input :total_files, disabled: @file_group.is_a?(BitLevelFileGroup), input_html: {value: @file_group.file_count}
